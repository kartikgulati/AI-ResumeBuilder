// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id     String @id @default(cuid()) //this gives a unique id to each resume in the database
  userId String //this is the id of the user who created the resume

  title       String? //this is the title of the resume
  description String? //this is the description of the resume

  photoUrl    String? //this is the url of the photo of the resume
  colorHex    String  @default("#0000000")
  borderStyle String  @default("squircle")
  summary     String?
  firstName   String?
  lastName    String?
  jobTitle    String?
  email       String?
  phone       String?
  country     String?
  city        String?


  workExperiences WorkExperience[] //this is the list of work experiences that belong to the resume
  educations      Education[] //this is the list of educations that belong to the resume

  createdAt       DateTime @default(now()) //this is the date the resume was created
  updatedAt       DateTime @default(now()) //this is the date the resume was last updated

  @@map("resumes")
}

model WorkExperience {
  id        String @id @default(cuid())//this gives a unique id to each work experience in the database
  resumeId  String //this is the id of the resume that the work experience belongs to

  position       String? //this is the title of the work experience
  company     String? //this is the company of the work experience
  startDate   DateTime? //this is the start date of the work experience
  endDate     DateTime? //this is the end date of the work experience
  description String? //this is the description of the work experience

  resumeID  String
  resume Resume @relation(fields: [resumeID], references: [id])

  createdAt       DateTime @default(now()) //this is the date the resume was created
  updatedAt       DateTime @default(now()) //this is the date the resume was last updated

  @@map("work_experiences")
}

model Education {
  id String @id @default(cuid()) //this gives a unique id to each education in the database

  degree       String? //this is the degree of the education
  school     String? //this is the school of the education
  startDate   DateTime? //this is the start date of the education
  endDate     DateTime? //this is the end date of the education

  resumeID  String
  resume Resume @relation(fields: [resumeID], references: [id])

  createdAt       DateTime @default(now()) //this is the date the resume was created
  updatedAt       DateTime @default(now()) //this is the date the resume was last updated

  @@map("educations")
}